// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package useCase

import (
	"github.com/mailru/easyjson/jlexer"
	"github.com/mailru/easyjson/jwriter"
)

func (Chat) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*Chat) UnmarshalJSON([]byte) error        { return nil }
func (Chat) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*Chat) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Chat *Chat

func (Data) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*Data) UnmarshalJSON([]byte) error        { return nil }
func (Data) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*Data) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Data *Data

func (ProcessWSMessage) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*ProcessWSMessage) UnmarshalJSON([]byte) error        { return nil }
func (ProcessWSMessage) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*ProcessWSMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ProcessWSMessage *ProcessWSMessage

func (ReceivedWSMessage) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*ReceivedWSMessage) UnmarshalJSON([]byte) error        { return nil }
func (ReceivedWSMessage) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*ReceivedWSMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ReceivedWSMessage *ReceivedWSMessage

func (User) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*User) UnmarshalJSON([]byte) error        { return nil }
func (User) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*User) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_User *User

func (WSMessageToSend) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*WSMessageToSend) UnmarshalJSON([]byte) error        { return nil }
func (WSMessageToSend) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*WSMessageToSend) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_WSMessageToSend *WSMessageToSend

func (supportChatsUseCase) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*supportChatsUseCase) UnmarshalJSON([]byte) error        { return nil }
func (supportChatsUseCase) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*supportChatsUseCase) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_supportChatsUseCase *supportChatsUseCase
